This guide covers how to run C programs on hosts in Mininet.
- Assume that the starting working directory is `D58FinalProject/`.
- In the 'doc/guide_mininet' directory, there are C programs 
  that can be run on the hosts.



Step 0: compile the example C programs.
- doc/guide_mininet/examples/HelloWorld.c
- doc/guide_mininet/examples/client.c
- doc/guide_mininet/examples/server.c

>>> cd doc/guide_mininet
>>> gcc HelloWorld.c -o HelloWorld
>>> gcc client.c -o client
>>> gcc server.c -o server
>>> cd ../..



Step 1: run Mininet with custom topology.
- run the python script `project_network.py` to generate the custom topology.
- Mininet will launch with the custom topology.

>>> sudo python doc/guide_miniet/project_network.py



Step 2: run the C program on the hosts.
- In the Mininet CLI, each host has access to the entire file system.
  We can run any command by using (HOST_NAME) (COMMAND).
- For example: `h1 pwd` will print the working directory of host h1.
- We can run the C programs on the hosts by using the following commands.

>>> h1 doc/guide_mininet/src_miniet/HelloWorld

Output:
Hello World!



Step 3: run the client and server programs on the hosts.
- This is a slightly modified version of the socket programming in Assignment 1.
- We need to run code on 2 hosts at the same time.
  h1 will be the server,
  h2 will be the client.

- We can use the `xterm` command to open a new terminal window for a host.
  NOTE: ssh must use -X flag to enable X11 forwarding.

    After this, following the commands below.

      xauth list $DISPLAY
      [output]
      sudo -s
      xauth list add [output]

    DO NOT LEAVE SUDO -S MODE. 


>>> xterm h1                            # in the Mininet CLI
>>> doc/guide_mininet/server                 # in the h1 terminal window

>>> xterm h2                            # in the Mininet CLI
>>> doc/guide_miniet/examples/client 10.0.0.1        # in the h2 terminal window
                                        10.0.0.1 is h1's IP address

- Type a message in the client terminal window.
  The server terminal window will print the message.
  The server will echo the message with a time stamp.

- Type `exit` in the client terminal window to exit the program.

Client Output:
hi                  # user input
hi
[from server] received at: Fri Dec  1 09:00:00 2023
bye                 # user input
bye
[from server] received at: Fri Dec  1 09:01:00 2023
exit                # user input
[from server] connection terminated, server exited.

Server Output:
hi
bye
connection terminated



The end.
Now you can run C programs on hosts in Mininet.


THE REAL DEAL:
--------------
If above works, it is time to run the project topology.


The project topology `vpn_topo` is under the project root directory.
Add $DISPLAY 
and enter sudo -s mode 

STEP 1: Run the project topology and test the helloWorld example
	
	python vpn_topo.py    		# runs the mininet
	xterm h1 			# open h1 terminal
	xterm h3			# open h3 terminal

	# however, any host can run client or server, so it does
	# not have to be h1 or h3

	# Let's test the helloWorld example to see if it works
	# run `run.sh` under doc/guide_mininet/examples/
	
	./server 		# in h3 terminal, for instance
	./client 10.0.0.x       # in h1 terminal. Here x is 3 since 
				# h3 runs the server
	# type anything in the client terminal, a same message and a timestamp
	# should be returned from server.
	
	
STEP 2: Run simple VPN project 

	stop client and server usign Ctrl-c
	compile the Simple VPN project by running `make` in src/
	
	








